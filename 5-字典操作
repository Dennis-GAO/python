
字典｛'':'','':''｝字典是无序 存储  字典特点   无序  键唯一
字典是python中唯一的映射类型，采用键值对（key-value）的形式存储数据  键是唯一的 不可修改的

可变不可变指的是数据在内存空间的地址变不变
  不可变类型：  创建了  数值就存在那个内存空间地址里面了  不会被修改 即使变量改了 也是对应到了另外的内存空间。 
 不可变类型：整型  字符串 元祖   这些变量只是改变了变量指向的内存地址  原地址指定的数据不变
 
 可变类型：列表  字典  

字典的键 不能用可变类型   字典的值可以用可变类型


字典创建

dict1=｛｝
dict2=dict((('name':'gao')))  dict() 格式   dict(()) 表示里面创建的是一个序列   （（（））） 里面的序列需要用括号包起来  也可以用[]表示要创建序列 和包起来键值对
dict3=dict((['name':'gao']))
dict3=dict([['name':'gao']])

字典操作
增
dic3={}
 
dic3['name']='alex'  
dic3['age']=18  #如果没有就创建 有就修改
print(dic3)#{'name': 'alex', 'age': 18}


#键存在，不改动，返回字典中相应的键对应的值
# dic3={'age': 18, 'name': 'alex', 'hobby': 'girl'}
# ret=dic1.setdefault('age',34)  #age键存在  年龄不会修改  还是原来的年龄   default 默认   setdefault 有返回值
# print(ret)
#>>>18
# #键不存在，在字典中中增加新的键值对，并返回相应的值
# dic3={'age': 18, 'name': 'alex', 'hobby': 'girl'}
# ret2=dic1.setdefault('hobby','girl')  #也是返回值 
# print(dic1)
# print(ret2)
#{'age': 18, 'name': 'alex', 'hobby': 'girl'}
#girl


查

#查  通过键去查找
# dic3={'age': 18, 'name': 'alex', 'hobby': 'girl'}
# print(dic3['name'])
#print(dic3.keys())  只查询键
print(type(dic3.keys())) # 取出来是dict3_keys类型
# print(list(dic3.keys()))#转换成列表

# print(list(dic3.values()))  #针对值 values
# print(list(dic3.items()))   # 把键值对都拿出来转换成元祖的形式  items


改  通过键去改相应的值

# li=[1,2,34,4]
# li[2]=5
# dic3={'age': 18, 'name': 'alex', 'hobby': 'girl'}
# dic3['age']=55
# print(dic3)

dic4={'age': 18, 'name': 'alex', 'hobby': 'girl'}
dic5={'1':'111','name':'222'}
dic4.update(dic5)  #会覆盖掉原来有的内容  把dic5 升级到4  4 有变化 会把4原来的覆盖掉
print(dic4)   #有变化
print(dic5)  #没变化
>>>{'1': '111', 'name': '222', 'hobby': 'girl', 'age': 18}
   {'name': '222', '1': '111'}

删除


dic4={'name': 'alex', 'age': 18,'class':1}
 
# dic4.clear()  #剩余一个空的字典  把里面的数据清空
# print(dic4)
del dic4['name']  #删除的是一个键值对  name键和对应的值没有了
print(dic4)

# print(dic5.pop('age')) #删除字典中指定键值对，并返回该键值对的值 同 del一个键 不同的是有返回值
dic4={'name': 'alex', 'age': 18,'class':1}
ret=dic4.pop('age')
print(ret)
print(dic4)
>>>18
   {'class': 1, 'name': 'alex'}

dic4={'name': 'alex', 'age': 18,'class':1}
a = dic4.popitem() #随机删除某组键值对，并以元组方式返回值  pop 列表删除最后一个
print(a)
print(dic4)
>>>('name', 'alex') #删除的这个内容是随机的  再次执行会删除另外一个
    {'age': 18, 'class': 1}

#5 其他操作以及涉及到的方法


# dic6=dict.fromkeys(['host1','host2','host3'],'test')
# print(dic6)#{'host3': 'test', 'host1': 'test', 'host2': 'test'}  #类似于初始化的值  键是host1-host4  值都是test
>>>{'host1': 'test', 'host3': 'test', 'host2': 'test'}

# dic6=dict.fromkeys(['host1','host2','host3'],['test',‘text2’])  #每个键对应的是一个列表 'host1'：['test',‘text2’]
>>>{'host1': 'test1,test2', 'host3': 'test1,test2', 'host2': 'test1,test2'}

缺点  
dic6['host1':[1]]='test3' #当做完这个操作的时候  所有的键对应的列表的第二个都改成了test3


字典嵌套


av_catalog = {
    "欧美":{
        "www.youporn.com": ["很多免费的,世界最大的","质量一般"],
        "www.pornhub.com": ["很多免费的,也很大","质量比yourporn高点"],
        "letmedothistoyou.com": ["多是自拍,高质量图片很多","资源不多,更新慢"],
        "x-art.com":["质量很高,真的很高","全部收费,屌比请绕过"]
    },
    "日韩":{
        "tokyo-hot":["质量怎样不清楚,个人已经不喜欢日韩范了","听说是收费的"]
    },
    "大陆":{
        "1024":["全部免费,真好,好人一生平安","服务器在国外,慢"]
    }
}


dic={5:'555',2:'222',4:'444'}
print(sorted(dic))　  #根据键去排序  2  4  5   字符串的话根据字符的ascci码排序


 字典的遍历　　

dic5={'name': 'alex', 'age': 18}
 
for i in dic5:
    print(i,dic5[i])  #i循环打印的键  推荐使用  没有数据类型之间的 转换。
>>>name alex
   age 18

dic5={'name': 'alex', 'age': 18} 
for items in dic5.items():  #items 键值对
    print(items)  #打印的是元祖形式的键值对   
>>>  ('age', 18)
    ('name', 'alex')
dic5={'name': 'alex', 'age': 18} 
for keys,values in dic5.items():  #赋给两个变量 可以分开去修改
    print(keys,values)
  >>>age 18
    name alex
